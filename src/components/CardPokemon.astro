---
type Props = {
  abilities:                Ability[];
  base_experience:          number;
  forms:                    Species[];
  game_indices:             GameIndex[];
  height:                   number;
  held_items:               HeldItem[];
  id:                       number;
  is_default:               boolean;
  location_area_encounters: string;
  moves:                    Move[];
  name:                     string;
  order:                    number;
  past_types:               any[];
  species:                  Species;
  sprites:                  Sprites;
  stats:                    Stat[];
  types:                    Type[];
  weight:                   number;
}

import {
  type Ability, 
  type Species, 
  type GameIndex, 
  type HeldItem, 
  type Move, 
  type Sprites, 
  type Stat, 
  type Type
} from '../types/pokemonResponse'

const { id, name, sprites } = Astro.props
---

<a
  href={`/pokemon/${id}`}
  class="rounded-lg border shadow-md bg-gray-800 border-gray-700 hover:scale-105 hover:bg-gray-700 hover:border-gray-500 transition flex flex-col"
>
<header class="p-4 flex-grow">
  <!-- {types.map(type => (
  <TypesPokemon name={type.type.name} url={type.type.url}/>
  ))} -->
  <h2> #{id}</h2>
</header>
  <picture>
    {sprites.front_shiny_female ? 
      <img 
        class="mb-5 rounded-lg" 
        src={sprites.front_shiny} 
        alt={`looking for pokemon ${name} in the pokeball`} 
      />
      <img 
        class="mb-5 rounded-lg" 
        src={sprites.front_shiny_female} 
        alt={`looking for pokemon ${name} in the pokeball`} 
      />
    : <img 
        class="mb-5 rounded-lg" 
        src={sprites.front_shiny} 
        alt={`looking for pokemon ${name} in the pokeball`} 
      />
    }
  </picture>
  <h2> #{id} Name: {name}</h2>
</a>